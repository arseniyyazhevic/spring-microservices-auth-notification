services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: auth-db
    ports:
      - "5432:5432"
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 5s

  flyway:
    image: flyway/flyway:11
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/auth-db
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: root
    volumes:
      - ./sql:/flyway/sql

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - notification-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_PROFILES_ACTIVE: docker

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8090:8090"